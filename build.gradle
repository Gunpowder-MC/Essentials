import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'java'
    id 'fabric-loom' version '0.2.7-SNAPSHOT' apply false
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'com.github.johnrengelman.shadow' version '4.0.1'
}

class Globals {
    static def version = "0.1"
    static def minecraftVersion = "1.15.2"
    static def yarnBuild = "+build.15"
    static def loaderVersion = "0.8.2+build.194"
}

class Dependencies {
    class Optional {
        static def modmenuVersion = "1.9.0+build.27"
    }

    class Required {
        static def fabricApiVersion = "0.5.1+build.294-1.15"
        static def palVersion = "1.1.0"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

shadowJar {
    archiveFileName = 'essentials-dev.jar'
    configurations = [project.configurations.shade]
}

version = Globals.version + "+" + Globals.minecraftVersion
logger.lifecycle("""
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	Building Essentials
	Version: $Globals.version
	Minecraft Version: $Globals.minecraftVersion
	Fabric-Loader Version: $Globals.loaderVersion

	Using:
	Fabric-API Version: $Dependencies.Required.fabricApiVersion
	PlayerAbilityLib Version: $Dependencies.Required.palVersion
	
	Output files will be in /build/libs
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
""")

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    group = "io.github.nyliummc.essentials"
    version = Globals.version + "+" + Globals.minecraftVersion

    configurations {
        dev
    }

    repositories {
        mavenCentral()
        maven {
            name = "Ladysnake Libs"
            url = "https://dl.bintray.com/ladysnake/libs"
        }
        maven {
            name = "pex-repo"
            url = "https://repo.glaremasters.me/repository/permissionsex/"
        }
        maven {
            name = "Sponge Repo"
            url = "https://repo.spongepowered.org/maven"
        }
    }

    dependencies {
        // Ah yes the little hack so we don't need to manually declare accessors as a dependency
        if (project.name != "essentials-accessors-impl") {
            compile project(":essentials-accessors-impl")
        }

        // Kotlin Magic, flesh this out.
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        minecraft "com.mojang:minecraft:$Globals.minecraftVersion"
        mappings "net.fabricmc:yarn:${Globals.minecraftVersion}${Globals.yarnBuild}:v2"
        modCompile "net.fabricmc:fabric-loader:$Globals.loaderVersion"

        // Fabric API. This is technically optional, but you probably want it anyway.
        modCompile "net.fabricmc.fabric-api:fabric-api:$Dependencies.Required.fabricApiVersion"

        // Hard Dependencies
        modImplementation ("io.github.ladysnake:PlayerAbilityLib:$Dependencies.Required.palVersion") {
            transitive = false
        }
        include "io.github.ladysnake:PlayerAbilityLib:$Dependencies.Required.palVersion"


        // Database stuff
        implementation 'org.jetbrains.exposed:exposed:0.10.1'

        // Database drivers
        implementation 'org.postgresql:postgresql:42.2.2'
        implementation 'org.xerial:sqlite-jdbc:3.28.0'

        // Libraries - To be debated
        //compile 'me.lucko.configurate:configurate-hocon:3.5'
        //compile 'com.github.ben-manes.caffeine:caffeine:2.8.0'

        // Soft Dependencies - Permissions (To be debated because of fabric api WIP: i509VCB)
        //compile 'net.luckperms:api:5.0' // LuckPerms
        // modCompileOnly 'ca.stellardrift.permissionsex:permissionsex-fabric:2.0-SNAPSHOT' // PEX
    }

    jar {
        classifier = "dev"
    }

    afterEvaluate {
        remapJar {
            input = file("${project.buildDir}/libs/$archivesBaseName-${project.version}-dev.jar")
            archiveName = "${archivesBaseName}-${project.version}.jar"
        }

        artifacts {
            dev file: file("${project.buildDir}/libs/$archivesBaseName-${project.version}-dev.jar"), type: "jar", builtBy: jar
        }

        processResources {
            inputs.property "version", project.version

            from(sourceSets.main.resources.srcDirs) {
                include "fabric.mod.json"
                expand "version": project.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude "fabric.mod.json"
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    compileKotlin.kotlinOptions.jvmTarget = "1.8"
}

subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }

dependencies {
    afterEvaluate {
        subprojects.each {
            shade project(path: ":${it.name}", configuration: "dev")
        }
    }

    // Runtime Only Dependencies
    modRuntime("io.github.prospector:modmenu:$Dependencies.Optional.modmenuVersion") {
        transitive = false // Naughty mods who JIJ fabric api
    }
}

jar {
    from "LICENSE"
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn tasks.shadowJar
    input = tasks.shadowJar.archivePath
    addNestedDependencies = true
    archiveName = "essentials-${project.version}.jar"
}

tasks.assemble.dependsOn tasks.remappedShadowJar

artifacts {
    archives remappedShadowJar
    shadow shadowJar
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/ideconfig.gradle'
